---
import { getImage } from "astro:assets";
import {
  EFFORT_LEVEL,
  MUSCLE_GROUPS,
  TRAINING_MODALITIES,
  EQUIPMENT,
} from "../customTypes";
import heavyPlate from "../assets/images/weight-plate.png";
let weight = await getImage({
  src: heavyPlate,
  width: 60,
  height: 60,
});
const weightBG = `url(${weight.src})`;
---

<script>
  // Library works but TS imports are not found. Fix has to come from library author.
  // @ts-ignore
  import SlimSelect from "slim-select";

  new SlimSelect({
    select: "#muscle-groups",
    settings: {
      placeholderText: "Muscle",
      showOptionTooltips: true,
    },
  });

  new SlimSelect({
    select: "#training-modalities",
    settings: {
      placeholderText: "Modalities",
    },
  });

  new SlimSelect({
    select: "#equipment",
    settings: {
      placeholderText: "Equipment",
    },
  });

  new SlimSelect({
    select: "#effort-level",
    settings: {
      placeholderText: "Difficulty Level",
    },
  });
</script>

<header class='container flex items-center justify-between mx-auto'>
  <a href='/'>
    <h1>Bench<span class='italic font-thin text-slate-600'>Buddy</span></h1>
    <h2 class='mt-2 text-slate-600'>Get After It!</h2>
  </a>
  <form>
    <select
      id='muscle-groups'
      class='border border-slate-500'
      name='muscle-groups'
      multiple
    >
      {
        MUSCLE_GROUPS.map((muscle: string) => (
          <option class='capitalize' value={muscle}>
            {muscle}
          </option>
        ))
      }
    </select>
    <select
      class='w-full'
      id='training-modalities'
      name='training-modalities'
      multiple
    >
      {
        TRAINING_MODALITIES.map((mode: string) => (
          <option value={mode}>{mode}</option>
        ))
      }
    </select>
    <select id='equipment' name='equipment' multiple>
      {
        EQUIPMENT.map((equipment: string) => (
          <option value={equipment}>{equipment}</option>
        ))
      }
    </select>

    <select id='effort-level' name='effort-level' multiple>
      {
        Object.keys(EFFORT_LEVEL).map((level: string) => (
          <option value={level}>{level}</option>
        ))
      }
    </select>
  </form>
</header>

<style>
  form {
    @apply flex gap-6;
  }
</style>

<style define:vars={{ weightBG }}>
  header {
    @apply flex gap-6 mb-6;
    a {
      @apply flex flex-col items-end;

      h1 {
        @apply text-6xl font-black text-black relative pl-20;
        font-family: "Cabin", sans-serif;

        &:before {
          @apply content-[""] absolute w-[60px] h-[60px] left-0 top-0;
          background: var(--weightBG) no-repeat;
        }
      }
    }
  }
</style>
