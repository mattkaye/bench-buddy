---
import { EFFORT_LEVEL } from "../customTypes";
import { Image } from "astro:assets";
import { getEntry } from "astro:content";

interface Props {
  id: string;
}
const { id } = Astro.props;
const entry = await getEntry("exercise", id);

const allImages = await Astro.glob("../assets/images/exercise/*/*.jpg");
const images = allImages.filter((image) => image.default.src.includes(id));

let exerciseName = "";
let level;
let mechanic;
let primaryMuscles;
let effortLevelColor;
let effortLevelEmoji;

if (entry) {
  exerciseName = entry.data.name;
  level = entry.data.level;
  mechanic = entry.data.mechanic;
  primaryMuscles = entry.data.primaryMuscles;
  effortLevelColor = EFFORT_LEVEL[level].color;
  effortLevelEmoji = EFFORT_LEVEL[level].emoji;
}
---

<div>
  <a href=`/exercise/${id}`>
    <article>
      <h1>{exerciseName}</h1>
      <div class='flex items-center justify-between'>
        <p class='effort-level'>
          {effortLevelEmoji}
          {level}
        </p>
        {mechanic && <p class='capitalize'>ðŸ›  {mechanic}</p>}
      </div>
      <p>
        ðŸŽ¯ Target: <span
          >{primaryMuscles.map((muscle: string) => muscle).join(", ")}</span
        >
      </p>

      <div class='fadein'>
        {
          images.map((image) => (
            <Image
              src={image.default}
              alt={exerciseName}
              width={300}
              height={200}
              class='object-cover max-h-[190px]'
            />
          ))
        }
      </div>
    </article>
  </a>
</div>
<style define:vars={{ effortLevelColor, effortLevelEmoji }}>
  article {
    @apply border rounded-xl flex flex-col justify-start p-3 transition-all bg-slate-100 duration-300 gap-4 w-72 relative overflow-clip h-[380px];

    &:hover {
      @apply -translate-y-2 bg-emerald-100 drop-shadow-md;
      .fadein {
        img {
          animation-name: fade;
          animation-iteration-count: infinite;
          animation-duration: 4s;

          &:nth-of-type(2) {
            animation-delay: -2s;
          }
        }
      }
    }

    h1 {
      @apply font-semibold text-xl;
    }

    p {
      @apply text-sm;

      span {
        @apply capitalize;
      }

      &.effort-level {
        @apply p-1 px-2 rounded-md text-xs uppercase text-white self-start;
        background-color: var(--effortLevelColor);

        &:before {
          @apply mr-1;
        }
      }
    }
    img {
      @apply w-full absolute left-0 bottom-0;
    }
  }
</style>
